server.port=8080
##数据库使用beta4的数据库
spring.datasource.url=jdbc:mysql://10.7.5.2:3306/matrix?useUnicode=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true
spring.datasource.username=grampus
spring.datasource.password=123456
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

mybatis.config-location=classpath:mybatis-config.xml

zookeeper.address=127.0.0.1:2181

server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.pattern=%{X-Forwarded-For}i %l %u [%{yyyy-MM-dd HH:mm:ss:mmm}t] "%r" %s %b %D "%{HTTP_X_UP_CALLING_LINE_ID}i" "%{x-up-calling-line-id}i" "%{User-Agent}i"
server.tomcat.accesslog.directory=/data/logs/matrix-process

logging.config=classpath:logback.xml
logging.level.root=INFO
logging.path=/data/logs/matrix-process
logging.file=/data/logs/matrix-process/matrix-process.log

#与应用中心交互的配置
app_remote=http://10.7.8.10:8888/openapi/app/listAppInfo
person_remote=http://10.7.8.10:8888/openapi/app/queryByName
appDetail_remote=http://10.7.8.10:8888/openapi/app/getAppInfoByAppCode
firstDept_remote=http://10.7.8.10:8888/openapi/app/listAllFirstDept
appTree_remote=http://10.7.8.10:8888/openapi/app/getDeptAppTree
searchUser_remote=http://10.7.8.10:8888/openapi/app/searchUser

#project地址
project_env=10.7.5.2:18081
getIssueList=http://${project_env}/api/jira/issue/listIssue
associateIssue=http://${project_env}/api/jira/issue/associate

##与publish交互的配置
#taskSave_remote=http://localsrv:18080/api/publish/projectTask/insert  
#taskUpdate_remote=http://localsrv:18080/api/publish/projectTask/update
#taskGetById_remote=http://localsrv:18080/api/publish/projectTask/getById
#taskGetByproId_remote=http://localsrv:18080/api/publish/projectTask/getByProjectId
taskSave_remote=http://matrix-publish:8080/api/publish/projectTask/insert
taskUpdate_remote=http://matrix-publish:8080/api/publish/projectTask/update
taskGetById_remote=http://matrix-publish:8080/api/publish/projectTask/getById
taskGetByproId_remote=http://matrix-publish:8080/api/publish/projectTask/getByProjectId
getMyproject_remote=http://matrix-publish:8080/api/publish/my/listProjectId

#代码检查相关交互的配置
#code_scan_remote=http://localsrv:18085/api/code/analyzer/scan
#codeReviewCreate_remote=http://localsrv:18085/api/code/analyzer/addCodeReview
code_scan_remote=http://matrix-codeanalyzer:8080/api/code/analyzer/scan
codeReviewCreate_remote=http://matrix-codeanalyzer:8080/api/code/analyzer/addCodeReview
k8s.docker.env=b1,b2,b3,b4,b5
