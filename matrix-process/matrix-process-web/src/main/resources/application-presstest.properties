server.port=18800
spring.datasource.url=jdbc:mysql://10.7.5.2:3306/matrix?useUnicode=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true
spring.datasource.username=grampus
spring.datasource.password=123456
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

mybatis.config-location=classpath:mybatis-config.xml

zookeeper.address=127.0.0.1:2181

server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.pattern=%{X-Forwarded-For}i %l %u [%{yyyy-MM-dd HH:mm:ss:mmm}t] "%r" %s %b %D "%{HTTP_X_UP_CALLING_LINE_ID}i" "%{x-up-calling-line-id}i" "%{User-Agent}i"
server.tomcat.accesslog.directory=/data/logs/matrix-process

logging.config=classpath:logback.xml
logging.level.root=INFO
logging.path=/data/logs/matrix-process
logging.file=/data/logs/matrix-process/matrix-process.log

#应用中心的线上地址
appcenter_env=10.2.39.9:8080
app_remote=http://${appcenter_env}/openapi/app/listAppInfo
person_remote=http://${appcenter_env}/openapi/app/queryByName
appDetail_remote=http://${appcenter_env}/openapi/app/getAppInfoByAppCode
firstDept_remote=http://${appcenter_env}/openapi/app/listAllFirstDept
appTree_remote=http://${appcenter_env}/openapi/app/getDeptAppTree
searchUser_remote=http://${appcenter_env}/openapi/app/searchUser
#
# process地址
process_env=10.7.1.30:18080
getMyproject_remote=http://${process_env}/api/publish/my/listProjectId
taskSave_remote=http://${process_env}/api/publish/projectTask/insert
taskUpdate_remote=http://${process_env}/api/publish/projectTask/update
taskGetById_remote=http://${process_env}/api/publish/projectTask/getById
taskGetByproId_remote=http://${process_env}/api/publish/projectTask/getByProjectId
#
# code analyzer地址
codeanalyzer_env=10.7.5.2:18085
code_scan_remote=http://${codeanalyzer_env}/api/code/analyzer/scan
codeReviewCreate_remote=http://${codeanalyzer_env}/api/code/analyzer/addCodeReview
#
# project地址
project_env=10.7.5.2:18081
getIssueList=http://${project_env}/api/jira/issue/listIssue
associateIssue=http://${project_env}/api/jira/issue/associate

# Redis数据库索引（默认为0）
spring.redis.database=4
# Redis服务器地址
#spring.redis.host=10.10.82.200
spring.redis.host=localhost
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=redisqa
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=80
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=0


ccs.matrix.appid=13
ccs.matrix.secret=cc65bedbb27039ec3a4f5844db74fbcf

ccs.validatetoken.url=http://grampus-ccs.beta6.staging.imrfresh.com/console/ccs/open/validateToKen
ccs.getmenubyoauthid.url=http://grampus-ccs.beta6.staging.imrfresh.com/console/ccs/open/user/getMenuByOauthId
ccs.haspermission.url=http://grampus-ccs.beta6.staging.imrfresh.com/console/ccs/open/user/hasPermission
k8s.docker.env=b1,b2,b3,b4,b5
